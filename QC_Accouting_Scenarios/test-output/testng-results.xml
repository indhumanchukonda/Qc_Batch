<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="16" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="14378221" started-at="2020-09-10T10:01:34Z" finished-at="2020-09-10T14:01:13Z">
    <groups>
      <group name="Janaki">
        <method signature="QCStore.JQC_ILP_Deposit_Return_OtherPayment_Txn()[pri:1, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Deposit_Return_OtherPayment_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn()[pri:14, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Newloan_Deposit_Return_Deposit_Txn()[pri:13, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_Deposit_Return_Deposit_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn()[pri:15, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn()[pri:16, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn()[pri:4, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn()[pri:5, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn()[pri:3, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn()[pri:2, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn()[pri:6, instance:tests.QCStore@5f9d02cb]" name="JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn()[pri:11, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn()[pri:12, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn()[pri:10, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn()[pri:9, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn()[pri:8, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn()[pri:7, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn" class="tests.QCStore"/>
      </group> <!-- Janaki -->
    </groups>
    <test name="Test" duration-ms="14378221" started-at="2020-09-10T10:01:34Z" finished-at="2020-09-10T14:01:13Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@5f9d02cb]" name="setup" is-config="true" duration-ms="88" started-at="2020-09-10T10:01:34Z" finished-at="2020-09-10T10:01:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5016" started-at="2020-09-10T10:01:35Z" finished-at="2020-09-10T10:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_ILP_Deposit_Return_OtherPayment_Txn()[pri:1, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Deposit_Return_OtherPayment_Txn" duration-ms="652709" started-at="2020-09-10T10:01:40Z" finished-at="2020-09-10T10:12:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Deposit_Return_OtherPayment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="225" started-at="2020-09-10T10:12:32Z" finished-at="2020-09-10T10:12:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_ILP_Deposit_Return_OtherPayment_Txn status=SUCCESS method=QCStore.JQC_ILP_Deposit_Return_OtherPayment_Txn()[pri:1, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5010" started-at="2020-09-10T10:12:32Z" finished-at="2020-09-10T10:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn()[pri:2, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn" duration-ms="757803" started-at="2020-09-10T10:12:37Z" finished-at="2020-09-10T10:25:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="54" started-at="2020-09-10T10:25:15Z" finished-at="2020-09-10T10:25:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn status=SUCCESS method=QCStore.JQC_LOC_SignatureLoan_Run2Statements_WaiveFee_Txn()[pri:2, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5009" started-at="2020-09-10T10:25:15Z" finished-at="2020-09-10T10:25:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn()[pri:3, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn" duration-ms="675864" started-at="2020-09-10T10:25:20Z" finished-at="2020-09-10T10:36:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="40" started-at="2020-09-10T10:36:36Z" finished-at="2020-09-10T10:36:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn status=SUCCESS method=QCStore.JQC_LOC_SignatureLoan_Run2Statements_PartialWaiveFee_Txn()[pri:3, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5014" started-at="2020-09-10T10:36:36Z" finished-at="2020-09-10T10:36:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn()[pri:4, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn" duration-ms="798879" started-at="2020-09-10T10:36:41Z" finished-at="2020-09-10T10:50:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="46" started-at="2020-09-10T10:50:00Z" finished-at="2020-09-10T10:50:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn status=SUCCESS method=QCStore.JQC_LOC_SignatureLoan_Run2Statements_Default_PartialWaiveFee_Txn()[pri:4, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5007" started-at="2020-09-10T10:50:00Z" finished-at="2020-09-10T10:50:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn()[pri:5, instance:tests.QCStore@5f9d02cb]" name="JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn" duration-ms="752248" started-at="2020-09-10T10:50:05Z" finished-at="2020-09-10T11:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="33" started-at="2020-09-10T11:02:37Z" finished-at="2020-09-10T11:02:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn status=SUCCESS method=QCStore.JQC_LOC_SignatureLoan_Run2Statements_Default_WaiveFee_Txn()[pri:5, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5016" started-at="2020-09-10T11:02:37Z" finished-at="2020-09-10T11:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn()[pri:6, instance:tests.QCStore@5f9d02cb]" name="JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn" duration-ms="970153" started-at="2020-09-10T11:02:43Z" finished-at="2020-09-10T11:18:53Z">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[null value in entry: url=null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: null value in entry: url=null
at com.google.common.collect.CollectPreconditions.checkEntryNotNull(CollectPreconditions.java:32)
at com.google.common.collect.SingletonImmutableBiMap.<init>(SingletonImmutableBiMap.java:42)
at com.google.common.collect.ImmutableBiMap.of(ImmutableBiMap.java:72)
at com.google.common.collect.ImmutableMap.of(ImmutableMap.java:124)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:276)
at tests.RepoReqDenied.repoProcess(RepoReqDenied.java:93)
at tests.QCStore.JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn(QCStore.java:512)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="834" started-at="2020-09-10T11:18:53Z" finished-at="2020-09-10T11:18:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn status=FAILURE method=QCStore.JQC_TLP_DCDeposit_Decline_2ndDeposit_Decline_Default_Repo_Redeposit_Decline_Txn()[pri:6, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5003" started-at="2020-09-10T11:18:53Z" finished-at="2020-09-10T11:18:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn()[pri:7, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn" duration-ms="696941" started-at="2020-09-10T11:18:58Z" finished-at="2020-09-10T11:30:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="33" started-at="2020-09-10T11:30:35Z" finished-at="2020-09-10T11:30:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn status=SUCCESS method=QCStore.JQC_TXMPDL_Newloan_Lessthan_CSOFee_Gracedays_Payment_Txn()[pri:7, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5013" started-at="2020-09-10T11:30:35Z" finished-at="2020-09-10T11:30:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn()[pri:8, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn" duration-ms="519906" started-at="2020-09-10T11:30:40Z" finished-at="2020-09-10T11:39:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="32" started-at="2020-09-10T11:39:20Z" finished-at="2020-09-10T11:39:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn status=SUCCESS method=QCStore.JQC_TXMPDL_Newloan_Lessthan_CSOFee_Duedate_Payment_Txn()[pri:8, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5003" started-at="2020-09-10T11:39:20Z" finished-at="2020-09-10T11:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn()[pri:9, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn" duration-ms="652431" started-at="2020-09-10T11:39:25Z" finished-at="2020-09-10T11:50:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="36" started-at="2020-09-10T11:50:18Z" finished-at="2020-09-10T11:50:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn status=SUCCESS method=QCStore.JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Gracedays_Payment_Txn()[pri:9, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5081" started-at="2020-09-10T11:50:18Z" finished-at="2020-09-10T11:50:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn()[pri:10, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn" duration-ms="759287" started-at="2020-09-10T11:50:23Z" finished-at="2020-09-10T12:03:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="32" started-at="2020-09-10T12:03:02Z" finished-at="2020-09-10T12:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn status=SUCCESS method=QCStore.JQC_TXMPDL_Newloan_Greaterthan_CSOFee_Duedate_1stInstPayment_Gracedays_2ndInstalPayment_Txn()[pri:10, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5002" started-at="2020-09-10T12:03:02Z" finished-at="2020-09-10T12:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn()[pri:11, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn" duration-ms="1233866" started-at="2020-09-10T12:03:07Z" finished-at="2020-09-10T12:23:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="33" started-at="2020-09-10T12:23:41Z" finished-at="2020-09-10T12:23:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn status=SUCCESS method=QCStore.JQC_TXMPDLACH_Newloan_Deposit2_5instand6_Txn()[pri:11, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5011" started-at="2020-09-10T12:23:41Z" finished-at="2020-09-10T12:23:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn()[pri:12, instance:tests.QCStore@5f9d02cb]" name="JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn" duration-ms="1200665" started-at="2020-09-10T12:23:46Z" finished-at="2020-09-10T12:43:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="35" started-at="2020-09-10T12:43:47Z" finished-at="2020-09-10T12:43:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn status=SUCCESS method=QCStore.JQC_TXMPDLDC_Newloan_Deposit2_5instand6_Txn()[pri:12, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5016" started-at="2020-09-10T12:43:47Z" finished-at="2020-09-10T12:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_ILP_Newloan_Deposit_Return_Deposit_Txn()[pri:13, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_Deposit_Return_Deposit_Txn" duration-ms="981555" started-at="2020-09-10T12:43:52Z" finished-at="2020-09-10T13:00:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Newloan_Deposit_Return_Deposit_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="45" started-at="2020-09-10T13:00:13Z" finished-at="2020-09-10T13:00:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_ILP_Newloan_Deposit_Return_Deposit_Txn status=SUCCESS method=QCStore.JQC_ILP_Newloan_Deposit_Return_Deposit_Txn()[pri:13, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5008" started-at="2020-09-10T13:00:14Z" finished-at="2020-09-10T13:00:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn()[pri:14, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn" duration-ms="1036337" started-at="2020-09-10T13:00:19Z" finished-at="2020-09-10T13:17:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="43" started-at="2020-09-10T13:17:35Z" finished-at="2020-09-10T13:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn status=SUCCESS method=QCStore.JQC_ILP_Newloan_Deposit_Return_Deposit_Deposit_Txn()[pri:14, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5006" started-at="2020-09-10T13:17:35Z" finished-at="2020-09-10T13:17:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn()[pri:15, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn" duration-ms="1259856" started-at="2020-09-10T13:17:40Z" finished-at="2020-09-10T13:38:40Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at tests.LegalGarnishment.lAndG(LegalGarnishment.java:193)
at tests.QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn(QCStore.java:1248)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="847" started-at="2020-09-10T13:38:40Z" finished-at="2020-09-10T13:38:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn status=FAILURE method=QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_NoCashOutRefinance_Txn()[pri:15, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5004" started-at="2020-09-10T13:38:41Z" finished-at="2020-09-10T13:38:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn()[pri:16, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn" duration-ms="1346186" started-at="2020-09-10T13:38:46Z" finished-at="2020-09-10T14:01:12Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at tests.LegalGarnishment.lAndG(LegalGarnishment.java:193)
at tests.QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn(QCStore.java:1378)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="826" started-at="2020-09-10T14:01:12Z" finished-at="2020-09-10T14:01:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn status=FAILURE method=QCStore.JQC_ILP_Newloan_ThreeDeposit_ThreeReturn_Default_YesCashOutRefinance_Txn()[pri:16, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
